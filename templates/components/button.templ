package components

var buttonClass = templ.SafeClass(`text-white bg-gray-800 hover:bg-gray-900
  focus:outline-none focus:ring-4 focus:ring-gray-300
  font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2
  dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700
  dark:border-gray-700`)

type ButtonType int

const (
	ButtonPrimary   = ButtonType(0)
	ButtonSecondary = ButtonType(1)
)

type ButtonConfig struct {
	Href string
	Hget string
	Type ButtonType
}

func (c ButtonConfig) typeClass() string {
	switch c.Type {
	case ButtonSecondary:
		return "btn-neutral"
	default:
		return "btn-primary"
	}
}

templ Button(config ButtonConfig) {
	if config.Href != "" {
		<a
			href={ templ.URL(config.Href) }
			hx-get={ string(templ.URL(config.Href)) }
			hx-target="main"
			hx-push-url="true"
			hx-trigger="mousedown[event.button == 0 && !event.metaKey]"
			onclick="event.metaKey || event.preventDefault()"
			class={ "btn", config.typeClass() }
		>
			{ children... }
		</a>
	} else {
		<button
			if config.Hget != "" {
				hx-get={ string(templ.URL(config.Hget)) }
				hx-target="main"
				hx-push-url="true"
				hx-trigger="mousedown[event.button == 0]"
				onclick="event.preventDefault()"
			}
			class={ "btn", config.typeClass() }
		>
			{ children... }
		</button>
	}
}
