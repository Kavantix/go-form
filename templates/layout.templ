package templates

import . "github.com/Kavantix/go-form/templates/components"

var FrontendSentryDSN string

script initSentry(dsn string) {
  Sentry.init({
    dsn: dsn,

    // Alternatively, use `process.env.npm_package_version` for a dynamic release version
    // if your build tool supports it.
    release: "go-form@0.0.1",
    environment: "local",
    integrations: [
      Sentry.browserTracingIntegration(),
    ],

    // Set tracesSampleRate to 1.0 to capture 100%
    // of transactions for performance monitoring.
    // We recommend adjusting this value in production
    tracesSampleRate: 0.1,

    // Set `tracePropagationTargets` to control for which URLs distributed tracing should be enabled
    tracePropagationTargets: ["http://go-form.test", , /^\//],
  });
}

templ Head() {
	<head>
		<title>Go Form Example</title>
		<script src="https://unpkg.com/htmx.org@2.0.2/dist/htmx.min.js" crossorigin="anonymous"></script>
		<script src="https://unpkg.com/htmx-ext-sse@2.2.2/sse.js" crossorigin="anonymous"></script>
		<script defer src="https://unpkg.com/alpinejs@3.13.5/dist/cdn.min.js" integrity="sha384-BxpSbjbDhVKwnC1UfcjsNEuMuxg4af5IXOaSi1Iq5rASQ/9a7uslhEXbP9UI/fXo" crossorigin="anonymous"></script>
		<link href="https://cdn.jsdelivr.net/npm/daisyui@4.6.0/dist/full.min.css" rel="stylesheet" type="text/css"/>
		<link href="/css/main.css" rel="stylesheet" type="text/css"/>
		<script src="https://browser.sentry-cdn.com/7.100.1/bundle.tracing.min.js" integrity="sha384-qDHTQsvbyIJZnxDsxk/o7/rgkA/DS8Rjg+HWqi7QyCEDW0x8K2N7XT9NBXdFpivP" crossorigin="anonymous"></script>
		<script src="/js/app.js"></script>
		<meta name="viewport" content="width=device-width, initial-scale=1"/>
		@initSentry(FrontendSentryDSN)
		<style>

body {
  touch-action: manipulation;
}
  
thead tr th:first-child { border-top-left-radius: 10px; border-bottom-left-radius: 10px;}
thead tr th:last-child { border-top-right-radius: 10px; border-bottom-right-radius: 10px;}

tbody tr td:first-child { border-top-left-radius: 5px; border-bottom-left-radius: 0px;}
tbody tr td:last-child { border-top-right-radius: 5px; border-bottom-right-radius: 0px;}

.loader {
  border: 4px solid #f3f3f3; /* Light grey */
  border-top: 4px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 16px;
  height: 16px;
  animation: spin 2s linear infinite;
}

.htmx-indicator {
  position: absolute;
  right: 4px;
  top: 4px;
  border: 4px solid #f3f3f3; /* Light grey */
  border-top: 4px solid #3498db; /* Blue */
  border-radius: 50%;
  width: 16px;
  height: 16px;
}
.htmx-indicator.htmx-request {
  animation: spin 2s linear infinite;
}

tr.htmx-request, a.htmx-request, button.htmx-request {
  background-color: rgb(12 74 110) !important;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.fade-in.htmx-added td div, .fade-in.htmx-added {
  max-height: 0;
  overflow: hidden;
  box-sizing: border-box;
  opacity: 0;
  padding: 0;
  border-width: 0;
}
.fade-in td div, .fade-in {
  max-height: 200px;
  box-sizing: border-box;
  transition: 
    opacity 0.4s ease;
  overflow: hidden;
  opacity: 1;
}

table {
  border-collapse: collapse;
}

</style>
	</head>
}

templ wrapWithHeadIfNeeded() {
	if IsHtmx(ctx) {
		{ children... }
	} else {
		<html>
			@Head()
			{ children... }
			<script>
      document.body.addEventListener('htmx:beforeSwap', function(evt) {
          if(evt.detail.xhr.status === 422){
          // allow 422 responses to swap as we are using this as a signal that
          // a form was submitted with bad data and want to rerender with the
          // errors
          //
          // set isError to false to avoid error logging in console
          console.log('beforeswap', evt)
          evt.detail.shouldSwap = true;
          evt.detail.isError = false;
          } 
          });
    </script>
		</html>
	}
}

templ Layout(currentTab string, childs ...templ.Component) {
	@wrapWithHeadIfNeeded() {
		@body(currentTab) {
			{ children... }
			for _, child := range childs {
				@child
			}
		}
	}
}

templ TabBar(currentTab string, swapOob bool) {
	<header
		id="tabbar"
		if swapOob {
			hx-swap-oob="true"
		}
		class="text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700"
	>
		<ul class="flex flex-wrap -mb-px gap-2">
			@Tab("/users", currentTab == "/users") {
				Users 
			}
			@Tab("/assignments", currentTab == "/assignments") {
				Assignments 
			}
			@Tab("/logout", false) {
				Logout
			}
		</ul>
	</header>
}

templ body(currentTab string) {
	<body>
		<div class="flex flex-col h-full">
			@TabBar(currentTab, false)
			<main class="overflow-y-auto h-full">
				{ children... }
			</main>
		</div>
		<div id="relogin"></div>
		<div
			id="toast-container"
			x-data="{ 
        toasts: [],
        toastClass(variant) {
          switch (variant) {
            case 'success':
              return 'border-l-success'
            case 'error':
              return 'border-l-error'
            default:
              return 'border-l-info'
          }
        }
      }"
			class="absolute top-8 right-4 max-w-52 flex flex-col gap-3"
			@show-toast="
      let ts = new Date().toISOString()
      let toast = {
      ...$event.detail,
        ts: ts
      }
      toasts = [toast, ...toasts]
      setTimeout(() => toasts.forEach(toast => {
          if (toast.ts === ts) {
              toast.show = true
            }
        }), 100);
      "
		>
			<template x-for="toast in toasts" :key="toast.ts">
				<div
					class="bg-base-300 border-l-8 text-base-content px-4 py-2 transition-transform duration-300"
					:class="[
            toastClass(toast.variant),
            toast.show ? 'translate-x-0' : 'translate-x-[130%]',
          ]"
					x-text="toast.message"
				></div>
			</template>
		</div>
	</body>
}

templ ServerFailure(redirect string) {
	@wrapWithHeadIfNeeded() {
		@serverFailure(redirect)
	}
}

templ serverFailure(redirect string) {
	<body hx-boost="true">
		<div class="h-full w-full flex justify-center items-center flex-col gap-2">
			<h1>Something went wrong</h1>
			<p>
				Please try again later or refresh the page.
			</p>
			@Button(ButtonConfig{Href: redirect}) {
				Go back
			}
		</div>
	</body>
}

templ NotFound(redirect string) {
	@wrapWithHeadIfNeeded() {
		@notFound(redirect)
	}
}

templ notFound(redirect string) {
	<body hx-boost="true">
		<div class="h-full w-full flex justify-center items-center flex-col gap-2">
			<h1>Not found</h1>
			<p>
				We could not find what you are looking for.
			</p>
			@Button(ButtonConfig{Href: redirect}) {
				Go back
			}
		</div>
	</body>
}
